{"version":3,"file":"static/js/888.d5fbc3a2.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c8c5142f4be3b54c36c807e0ef85cecf',\n  },\n});\n\nconst getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\nconst searchMovies = async search => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query: search },\n  });\n  return data;\n};\nconst getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n  return data;\n};\nconst getMovieReviews = async id => {\n  const data = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\nconst getMovieCast = async id => {\n  const data = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\nexport {\n  getTrending,\n  searchMovies,\n  getMovieById,\n  getMovieReviews,\n  getMovieCast,\n};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__PGjyO\",\"img\":\"MovieDetails_img__D3WH9\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"list\":\"MovieDetails_list__y5Rs9\",\"p\":\"MovieDetails_p__V6vKh\",\"castUl\":\"MovieDetails_castUl__G61OD\",\"link\":\"MovieDetails_link__wf74g\"};","import {\n  useParams,\n  Outlet,\n  Link,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport noimg from 'images/noImage.jpg';\nimport css from './MovieDetails.module.css'\nimport { getMovieById } from 'api/api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [year, setYear] = useState();\n  const { movieId } = useParams();\n  const { backdrop_path, id, title, overview, genres } = movie;\n  const genresArray = genres?.map(({ name }) => name);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const from = location.state?.from || '/';\n\n  const backButton = useCallback(() => navigate(from), [from, navigate]);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const chosenMovie = await getMovieById(movieId);\n        setMovie(chosenMovie.data);\n        const date = chosenMovie.data.realease_date.slice(0, 4);\n        setYear(date);\n      } catch ({ response }) {\n        console.log(response);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <button onClick={backButton} className={css.button}>\n        Go back\n      </button>\n      <div className={css.wrapper}>\n        <img\n          alt={title}\n        //   src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n          src={\n            backdrop_path\n              ? `https://image.tmdb.org/t/p/w500${backdrop_path}`\n              : noimg\n          }\n          className={css.img}\n        />\n        <ul className={css.list}>\n          <li>\n            <h1>\n              {title} {year}\n            </h1>\n          </li>\n          <li>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <h3>Genres</h3>\n            <p>{genresArray}</p>\n          </li>\n        </ul>\n      </div>\n\n      <p className={css.p}>Additional information</p>\n      <ul className={css.castUl}>\n        <li className={css.castli}>\n          <Link\n            to={`/movies/${id}/cast`}\n            state={{ from: location.state.from }}\n            className={css.link}\n          >\n            Cast\n          </Link>\n        </li>\n        <li className={css.castli}>\n          <Link\n            to={`/movies/${id}/reviews`}\n            state={{ from: location.state.from }}\n            className={css.link}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","search","query","getMovieById","id","getMovieReviews","getMovieCast","useState","movie","setMovie","year","setYear","movieId","useParams","backdrop_path","title","overview","genres","genresArray","map","name","location","useLocation","navigate","useNavigate","from","state","backButton","useCallback","useEffect","fetchMovie","chosenMovie","date","realease_date","slice","response","console","log","onClick","className","css","alt","src","noimg","to"],"sourceRoot":""}