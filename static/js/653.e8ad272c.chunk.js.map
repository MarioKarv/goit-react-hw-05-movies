{"version":3,"file":"static/js/653.e8ad272c.chunk.js","mappings":"sSACMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIPC,EAAW,mCAAG,sGACKL,EAASM,IAAI,uBADlB,uBACVC,EADU,EACVA,KADU,kBAEXA,GAFW,2CAAH,qDAIXC,EAAY,mCAAG,WAAMC,GAAN,yFACIT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAEO,MAAOD,KAFA,uBACXF,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAMZI,EAAY,mCAAG,WAAMC,GAAN,uFACAZ,EAASM,IAAT,iBAAuBM,IADvB,cACbL,EADa,yBAEZA,GAFY,2CAAH,sDAIZM,EAAe,mCAAG,WAAMD,GAAN,uFACHZ,EAASM,IAAT,iBAAuBM,EAAvB,aADG,cAChBL,EADgB,yBAEfA,GAFe,2CAAH,sDAIfO,EAAY,mCAAG,WAAMF,GAAN,uFACAZ,EAASM,IAAT,iBAAuBM,EAAvB,aADA,cACbL,EADa,yBAEZA,GAFY,2CAAH,qD,4HCzBlB,EAAuB,qBAAvB,EAAiD,mBAAjD,EAAyE,mBAAzE,EAAmG,qBAAnG,EAAiI,uBAAjI,EAAgK,sB,SCkDhK,EA7Ce,WACb,IAAMQ,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,YAA5B,eAAOR,EAAP,KAAeS,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMb,EAAQY,EAAahB,IAAI,SACzBkB,EAAQ,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAOM,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,MAAP,OAC1B,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAajB,GAAMkB,MAAO,CAAEC,KAAMhB,GAAYY,UAAWC,EAAjE,SACGF,KAFId,EADiB,IAa5B,OALAoB,EAAAA,EAAAA,YAAU,YACRxB,EAAAA,EAAAA,IAAaE,GAAOuB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC1Bd,EAASc,EACV,GACF,GAAE,CAACZ,EAAcZ,EAAOU,KAEvB,iCACE,kBACEO,UAAWC,EACXO,SAAU,SAAAC,GACRA,EAAEC,iBACFd,EAAgB,CAAEb,MAAOD,GAC1B,EALH,WAOE,kBACEkB,UAAWC,EACXU,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXrB,EAAUqB,EAAOC,OACjBjB,EAAgB,CAAEb,MAAO6B,EAAOC,OACjC,EACDC,KAAK,OACLC,KAAK,YAEP,mBAAQD,KAAK,SAASd,UAAWC,EAAjC,UACE,SAAC,MAAD,CAAae,KAAM,WAGvB,eAAIhB,UAAWC,EAAf,SAAwBJ,MAG7B,C","sources":["api/api.js","webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c8c5142f4be3b54c36c807e0ef85cecf',\n  },\n});\n\nconst getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\nconst searchMovies = async search => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query: search },\n  });\n  return data;\n};\nconst getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n  return data;\n};\nconst getMovieReviews = async id => {\n  const data = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\nconst getMovieCast = async id => {\n  const data = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\nexport {\n  getTrending,\n  searchMovies,\n  getMovieById,\n  getMovieReviews,\n  getMovieCast,\n};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Movies_link__0oDWE\",\"ul\":\"Movies_ul__eYeLM\",\"li\":\"Movies_li__oWqWQ\",\"form\":\"Movies_form__mp42q\",\"button\":\"Movies_button__hVjwG\",\"input\":\"Movies_input__OE3ef\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { searchMovies } from 'api/api';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport css from './Movies.module.css'\n\nconst Movies = () => {\n  const location = useLocation();\n  const [search, setSearch] = useState();\n  const [items, setItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const elements = items?.map(({ id, title }) => (\n    <li key={id} className={css.li}>\n      <Link to={`/movies/${id}`} state={{ from: location }} className={css.link}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  useEffect(() => {\n    searchMovies(query).then(({ results }) => {\n      setItems(results);\n    });\n  }, [searchParams, query, setItems]);\n  return (\n    <>\n      <form\n        className={css.form}\n        onSubmit={e => {\n          e.preventDefault();\n          setSearchParams({ query: search });\n        }}\n      >\n        <input\n          className={css.input}\n          onChange={({ target }) => {\n            setSearch(target.value);\n            setSearchParams({ query: target.value });\n          }}\n          type=\"text\"\n          name=\"search\"\n        />\n        <button type=\"submit\" className={css.button}>\n          <BiSearchAlt size={25} />\n        </button>\n      </form>\n      <ul className={css.ul}>{elements}</ul>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","search","query","getMovieById","id","getMovieReviews","getMovieCast","location","useLocation","useState","setSearch","items","setItems","useSearchParams","searchParams","setSearchParams","elements","map","title","className","css","to","state","from","useEffect","then","results","onSubmit","e","preventDefault","onChange","target","value","type","name","size"],"sourceRoot":""}